@using Kendo.Mvc.UI;
@functions{
    private const string ControllerName = "Responses";
}
@{
    ViewBag.Title = "Responses";
}

<div class="row">
    <div class="text-center">
        <h2>Responses</h2>
    </div>

    <div>
        @(Html.Kendo()
    .Grid<MySurveys.Web.Areas.Administration.ViewModels.ResponseViewModel>()
    .Name("grid-responses")
    .Columns(columns =>
    {
        columns.Bound(model => model.Id);
        columns.Bound(model => model.SurveyTitle);
        columns.Bound(model => model.AuthorUserName);
        columns.Bound(model => model.CreatedOn).Format("{0:dd/MM/yyyy HH:mm}");
        columns.Bound(model => model.ModifiedOn).Format("{0:dd/MM/yyyy HH:mm}");
        columns.Command(command =>
        {
            command.Destroy();
            command.Edit();
        }).Title("Options");
    })
    .Pageable(page =>
    {
        page.Refresh(true);
        page.PreviousNext(true);
        page.Numeric(true);
    })
    .Sortable(sort =>
    {
        sort.AllowUnsort(false);
        sort.SortMode(GridSortMode.SingleColumn);
    })
    .Editable(edit =>
    {
        edit.Mode(GridEditMode.PopUp);
    })
    .Filterable()
    .Resizable(resize => resize.Columns(true))
    .DataSource(data =>
    {
        data.Ajax()
            .Model(m =>
            {
                m.Id(b => b.Id);
            })
            .PageSize(5)
            .ServerOperation(true)
            .Events(ev => ev.Error("errorAlert"))
            .Read("Read", ControllerName)
            .Update("Update", ControllerName)
            .Destroy("Destroy", ControllerName)
            .Sort(sort => sort.Add("Id").Ascending());
    }))
    </div>
</div>

<script>
    function errorAlert(err) {
        // console.log(err);
        alert("An error occurred");
    }
</script>