@model MySurveys.Web.Areas.Surveys.ViewModels.Creating.QuestionViewModel

<div class="modal-body">
    <div class="alert alert-danger">
        <span class="glyphicon glyphicon-question-sign"></span>
        <span class="text-center">Edit question:</span>
    </div>

    @using (Html.BeginForm("EditQuestion", "MySurveys", new { area = "Surveys" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Content)
        @Html.HiddenFor(model => model.IsDependsOn)
        <div class="form-group">
            <div class="col-md-offset-4 col-md-7">
                @Html.ValidationSummary("", new { @class = "text-danger" })
            </div>
        </div>
        foreach (var item in Model.PossibleAnswers)
        {
            <div class="form-group">
                <div class="col-md-3">
                    @Html.DisplayFor(model => item.Content, new { @class = "control-label col-md-4" })
                    @Html.HiddenFor(model => item.Content)
                </div>
                @if (Model.IsDependsOn)
                {
                    <div class="col-md-7">
                        next question -> @Html.DropDownList("Questions", ViewData["Questions"] as SelectListItem[])
                    </div>
                }
            </div>
        }
        if (!Model.IsDependsOn && Model.PossibleAnswers.Any())
        {
            <div class="col-md-4">
                Choose next question:
            </div>
            <div class="col-md-7">
                @Html.DropDownList("Questions", ViewData["Questions"] as SelectListItem[], "-- None -- ")
            </div>
        }
        <br /><br /><br />
        <div class="form-group">
            <div class="col-md-4 col-md-offset-4 pull-right">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="submit" id="approve-btn" class="btn btn-primary">Save</button>
            </div>
        </div>
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/saveModal")
}


